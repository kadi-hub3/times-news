{"version":3,"sources":["API.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchArticles","a","fetch","process","response","ok","json","jsonRes","results","articles","map","article","title","abstract","author","byline","section","url","short_url","image","multimedia","App","React","useState","setArticles","useEffect","console","log","getData","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGaA,G,MAAa,uCAAG,gCAAAC,EAAA,sEACJC,MAAM,GAAD,OAHlBC,4CAGkB,8BAJlBA,qCAGiB,YACrBC,EADqB,QAGdC,GAHc,iCAIHD,EAASE,OAJN,cAInBC,EAJmB,gBAKFA,EAAQC,QALN,cAKnBC,EALmB,yBAMlBA,EAASC,KAAI,SAACC,GACnB,MAAO,CACLC,MAAOD,EAAQC,MACfC,SAAUF,EAAQE,SAClBC,OAAQH,EAAQI,OAChBC,QAASL,EAAQK,QACjBC,IAAKN,EAAQO,UACbC,MAAOR,EAAQS,WAAW,GAAGH,SAbR,4CAAH,sD,OCkCXI,MAjCf,WACE,MAAgCC,IAAMC,SAAgB,IAAtD,mBAAOd,EAAP,KAAiBe,EAAjB,KAkBA,OAZAF,IAAMG,WAAU,YACD,uCAAG,4BAAAxB,EAAA,sEACSD,IADT,OACRI,EADQ,OAEdsB,QAAQC,IAAIvB,GACZoB,EAAYpB,GAHE,2CAAH,qDASbwB,KACC,IAED,sBAAKC,UAAU,MAAf,eAEGpB,EAASC,KAAI,SAACC,EAASmB,GACtB,OACE,8BACE,6BAAKnB,EAAQC,SADLkB,UCdLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bd90bf4.chunk.js","sourcesContent":["const key = process.env.REACT_APP_API_KEY;\nconst url = process.env.REACT_APP_URL;\n\nexport const fetchArticles = async () => {\n  const response = await fetch(`${url}/home.json?api-key=${key}`);\n\n  if (response.ok) {\n    const jsonRes = await response.json();\n    const articles = await jsonRes.results;\n    return articles.map((article: any) => {\n      return {\n        title: article.title,\n        abstract: article.abstract,\n        author: article.byline,\n        section: article.section,\n        url: article.short_url,\n        image: article.multimedia[0].url,\n      };\n    });\n  }\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { fetchArticles } from \"./API\";\n\nfunction App() {\n  const [articles, setArticles] = React.useState<any[]>([]);\n  // const [title, setTitle] = React.useState('');\n  // const [abstract, setAbstract] = React.useState('');\n  // const [image, setImg] = React.useState('')\n  // const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    const getData = async () => {\n      const response = await fetchArticles();\n      console.log(response);\n      setArticles(response);\n      // setTitle(response.title)\n      // setImg(response.img)\n      // setAbstract(response.abstract)\n      // setUrl(response.url)\n    };\n    getData();\n  }, []);\n  return (\n    <div className=\"App\">\n      hi\n      {articles.map((article, id) => {\n        return (\n          <div key={id}>\n            <h1>{article.title}</h1>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}